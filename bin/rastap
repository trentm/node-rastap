#!/usr/bin/env node
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.
//
// Copyright (c) 2018, Joyent, Inc.
//
// rastap -- Another node.js test runner, mon.
//

var assert = require('assert-plus');
var dashdash = require('dashdash');
var exeunt = require('exeunt');
var fs = require('fs');

var rastap = require('../');

//---- globals and constants

var OPTIONS = [
    {
        name: 'version',
        type: 'bool',
        help: 'Print tabula version and exit.'
    },
    {
        names: ['help', 'h'],
        type: 'bool',
        help: 'Print this help and exit.'
    }
];


// ---- mainline

function main() {
    var parser = dashdash.createParser({options: OPTIONS});
    try {
        var opts = parser.parse(process.argv);
    } catch (optsErr) {
        console.error('rastap: error: %s', optsErr.message);
        exeunt(1);
        return;
    }

    if (opts.help) {
        var help = parser.help({includeEnv: true}).trimRight();
        console.log([
            'XXX intro',
            '',
            'Usage:',
            '    rastap [OPTIONS] [FILES...]',
            '',
            'Options:',
            help
        ].join('\n'));
        return;
    } else if (opts.version) {
        var packageJson = path.resolve(__dirname, '../package.json');
        var pkg = JSON.parse(fs.readFileSync(packageJson));
        console.log('rastap ' + pkg.version);
        console.log(pkg.homepage);
        return;
    }

    XXXmain
}


if (require.main === module) {
    process.stdout.on('error', function onStdoutError(err) {
        if (err.code === 'EPIPE') {
            process.exit(0);
        }
    });

    main(process.argv);
}
